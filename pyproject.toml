[tool.poetry]
name = "py-config-manager"
version = "1.0.0"
description = "A flexible and type-safe configuration management library for Python applications"
authors = ["Config Manager Contributors"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/py-config-manager/py-config-manager"
repository = "https://github.com/py-config-manager/py-config-manager"
documentation = "https://github.com/py-config-manager/py-config-manager/blob/main/README.md"
keywords = ["config", "configuration", "settings", "environment", "yaml", "json", "toml"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Typing :: Typed",
]
packages = [{include = "config_manager", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
pydantic = "^2.0"
pyyaml = "^6.0"
toml = "^0.10.2"
python-dotenv = "^1.0.0"
typing-extensions = { version = "^4.0", python = "<3.10" }

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-cov = "^4.1"
pytest-asyncio = "^0.21"
black = "^23.0"
isort = "^5.12"
mypy = "^1.5"
flake8 = "^6.1"
pre-commit = "^3.4"
sphinx = "^7.0"
sphinx-rtd-theme = "^1.3"
sphinx-autodoc-typehints = "^1.24"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "--cov=config_manager --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src/config_manager"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]